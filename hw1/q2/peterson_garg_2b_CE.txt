using statement merging
  1:	proc  1 (user:1) peterson_garg_2b.pml:8 (state 1)	[assert(((_pid==0)||(_pid==1)))]
  2:	proc  0 (user:1) peterson_garg_2b.pml:8 (state 1)	[assert(((_pid==0)||(_pid==1)))]
  3:	proc  1 (user:1) peterson_garg_2b.pml:10 (state 2)	[turn = (1-_pid)]
  4:	proc  0 (user:1) peterson_garg_2b.pml:10 (state 2)	[turn = (1-_pid)]
  5:	proc  0 (user:1) peterson_garg_2b.pml:11 (state 3)	[flag[_pid] = 1]
  6:	proc  0 (user:1) peterson_garg_2b.pml:12 (state 4)	[(!(((flag[(1-_pid)]==1)&&(turn==(1-_pid)))))]
  7:	proc  1 (user:1) peterson_garg_2b.pml:11 (state 3)	[flag[_pid] = 1]
  8:	proc  1 (user:1) peterson_garg_2b.pml:12 (state 4)	[(!(((flag[(1-_pid)]==1)&&(turn==(1-_pid)))))]
  9:	proc  1 (user:1) peterson_garg_2b.pml:14 (state 5)	[ncrit = (ncrit+1)]
 10:	proc  0 (user:1) peterson_garg_2b.pml:14 (state 5)	[ncrit = (ncrit+1)]
spin: peterson_garg_2b.pml:15, Error: assertion violated
spin: text of failed assertion: assert((ncrit==1))
 11:	proc  1 (user:1) peterson_garg_2b.pml:15 (state 6)	[assert((ncrit==1))]
spin: trail ends after 11 steps
#processes: 2
		turn = 1
		flag[0] = 1
		flag[1] = 1
		ncrit = 2
 11:	proc  1 (user:1) peterson_garg_2b.pml:16 (state 7)
 11:	proc  0 (user:1) peterson_garg_2b.pml:15 (state 6)
2 processes created
